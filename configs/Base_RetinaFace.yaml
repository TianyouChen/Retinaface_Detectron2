MODEL:
    META_ARCHITECTURE: "RetinaFace"
    BACKBONE:
      NAME: "build_resnet_fpn_backbone"
    RESNETS:
      OUT_FEATURES: ["res3", "res4", "res5"]
    ANCHOR_GENERATOR:
      SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
    FPN:
      IN_FEATURES: ["res3", "res4", "res5"]
    RETINANET:
      IOU_THRESHOLDS: [0.4, 0.5]
      IOU_LABELS: [0, -1, 1]
DATASETS:
    TRAIN: ("widerface_train",)
    TEST: ("widerface_val",)
SOLVER:
    IMS_PER_BATCH: 16
    BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
    STEPS: (60000, 80000)
    MAX_ITER: 90000
    CHECKPOINT_PERIOD: 2000
INPUT:
    MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
DATALOADER:
    NUM_WORKERS: 16
TEST:
    DETECTIONS_PER_IMAGE: 300
    EVAL_PERIOD: 10000
VERSION: 2
OUTPUT_DIR: "/mnt/tensorboard/"
